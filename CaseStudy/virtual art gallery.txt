IVirtualArtGallery artGallery = new VirtualArtGalleryImplementation();

bool exit = false;

while (!exit)
{
    Console.WriteLine("\n ========== Welcome to Virtual Art Gallery ==========");
    Console.WriteLine("\n ****************************************************************");
    Console.WriteLine("\n ========== VIRTUAl ART GSLLERY MENU ==========");
    Console.WriteLine("\n Click");
    Console.WriteLine("\n 1 to Add Artwork");
    Console.WriteLine("\n 2 to View Artwork by ID");
    Console.WriteLine("\n 3 to Update Artwork");
    Console.WriteLine("\n 4 to Delete Artwork");
    Console.WriteLine("\n 5 to Search Artwork");
    Console.WriteLine("\n 6 to Add Artworks to Favorites");
    Console.WriteLine("\n 7 to Get User Favorite Artworks");
    Console.WriteLine("\n 8 to Check if User has Favorites");
    Console.WriteLine("\n 9 to Exit");
    Console.WriteLine("\n Enter your Choice: ");

    String choice = Console.ReadLine();

    switch (choice)
    {
        case "1":

            Console.Write("Enter Title: ");
            string title = Console.ReadLine();

            Console.Write("Enter Description: ");
            string desc = Console.ReadLine();

            Console.Write("Enter Creation Date (yyyy-mm-dd): ");
            DateTime date = DateTime.Parse(Console.ReadLine());

            Console.Write("Enter Medium");
            string medium = Console.ReadLine();

            Console.Write("Enter Image URL: ");
            string img = Console.ReadLine();

            Console.Write("Enter Artist ID: ");
            int artistid = int.Parse(Console.ReadLine());

            Artworks art = new Artworks(title, desc, date, medium, img, artistid);

            bool added = artGallery.addArtwork(art);
            Console.WriteLine(added ? "Artwork Added Successfully with ArtistID: " +art.ArtworkID : "Failed to Add Artwork");
            
            break;

        case "2":

            Console.Write("Enter ArtworkID: ");
            int id = int.Parse(Console.ReadLine());

            try
            {
                Artworks newart = artGallery.getArtworkById(id);
                Console.WriteLine("\n========== Artwork Details ==========");
                Console.WriteLine($"ArtworkID : {newart.ArtworkID}");
                Console.WriteLine($"Title     : {newart.Title}");
                Console.WriteLine($"Artist ID : {newart.ArtistID}");
                Console.WriteLine("=====================================");
            }

            catch (ArtworkNotFoundException ex)
            {
                Console.WriteLine(ex.Message);
            }

            break;

        case "3":

            Console.Write("Enter ArtworkID to Update: ");
            int upid = int.Parse(Console.ReadLine());

            Console.Write("Enter New Title: ");
            string newtitle = Console.ReadLine();

            Console.Write("Enter Description: ");
            string newdesc = Console.ReadLine();

            Console.Write("Enter Creation Date (yyyy-mm-dd): ");
            DateTime newdate = DateTime.Parse(Console.ReadLine());

            Console.Write("Enter Medium");
            string newmedium = Console.ReadLine();

            Console.Write("Enter Image URL: ");
            string newimg = Console.ReadLine();

            Console.Write("Enter Artist ID: ");
            int newartistid = int.Parse(Console.ReadLine());

            Artworks updatedArt = new Artworks(upid, newtitle, newdesc, newdate, newmedium, newimg, newartistid);

            try
            {
                bool result = artGallery.updateArtwork(updatedArt);
                Console.WriteLine(result ? "Artwork Updated Successfully" : "Update Failed");
            }

            catch (ArtworkNotFoundException ex)
            {
                Console.WriteLine(ex.Message);
            }

            break;

        case "4":

            Console.Write("Enter ArtworkID to Delete: ");
            int delid = int.Parse(Console.ReadLine());

            try
            {
                bool remove = artGallery.removeArtwork(delid);
                Console.WriteLine(remove ? "Deleted Successfully" : "Couldnt't Delete");
            }

            catch (ArtworkNotFoundException ex)
            {
                Console.WriteLine(ex.Message);
            }

            break;

        case "5":

            Console.Write("Enter Keyword to Search: ");
            string k = Console.ReadLine();

            List<Artworks> res = artGallery.searchArtworks(k);

            foreach (var r in res)
            {
                Console.WriteLine($"ArtworkID: {r.ArtworkID}," +
                    $"\nArtistID: {r.ArtistID}");
            }

            break;

        case "6":

            Console.Write("Enter UserID: ");
            int faid = int.Parse(Console.ReadLine());

            Console.WriteLine("Enter ArtworkID to Favorite: ");
            int fvartid = int.Parse(Console.ReadLine());

            try
            {
                bool fav = artGallery.addArtworkToFavorite(faid, fvartid);
                Console.WriteLine(fav ? "Added to Favorties" : "Failed to Add to Favorites");
            }
            catch (ArtworkNotFoundException ex)
            {
                Console.WriteLine(ex.Message);  
            }

            break;

        case "7":

            Console.Write("Enter UserID: ");
            int userfav = int.Parse(Console.ReadLine());

            try
            {
                List<Artworks> favs = artGallery.getUserFavoriteArtworks(userfav);
                foreach (var f in favs)
                    Console.WriteLine($"Favorite ArtworkID: {f.ArtworkID}" +
                        $"\n Title: {f.Title}");
            }

            catch(UserNotFoundException ex)
            {
                Console.WriteLine(ex.Message);  
            }

            break;

        case "8":

            Console.Write("Enter UserID: ");
            int cu = int.Parse(Console.ReadLine());

            try
            {
                bool isfav = artGallery.checkIfUserHasFavorites(cu);
                Console.WriteLine(isfav ? "User has Fsvorites" : "User has no favorites");
            }

            catch(UserNotFoundException ex)
            {
                Console.WriteLine(ex.Message);
            }

            break;

        case "9":
            exit = true;
            Console.WriteLine("Exiting program. Thank you! Have a Nice Day.");
            break;

        default:
            Console.WriteLine("Invalid Choice. Try Again.");
            break;
    } 
}